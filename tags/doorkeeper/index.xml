<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Doorkeeper on Blog</title>
    <link>https://albertogrespan.com/tags/doorkeeper/</link>
    <description>Recent content in Doorkeeper on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>alberto@albertogrespan.com (Alberto Grespan)</managingEditor>
    <webMaster>alberto@albertogrespan.com (Alberto Grespan)</webMaster>
    <lastBuildDate>Thu, 15 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://albertogrespan.com/tags/doorkeeper/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Extending Doorkeeper models in Rails</title>
      <link>https://albertogrespan.com/blog/extending-doorkeeper-models-in-rails/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      <author>alberto@albertogrespan.com (Alberto Grespan)</author>
      <guid>https://albertogrespan.com/blog/extending-doorkeeper-models-in-rails/</guid>
      <description>tl;dr use class_eval to extend Doorkeeper models functionality in runtime.
 A few weeks ago at work, we were extending our very basic OAuth2 provider by adding the possibility to either login with Google OAuth2 or with our own. With that we also did a role based level of authorization, nothing complex&amp;hellip; but, as we are using Doorkeeper for the OAuth2 we needed new validations, associations and a couple of new methods in one of their models to fulfill our needs.</description>
    </item>
    
  </channel>
</rss>